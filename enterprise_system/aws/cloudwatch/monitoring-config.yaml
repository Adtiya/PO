# CloudWatch Monitoring and Alerting for Enterprise AI System
# Comprehensive monitoring, logging, and alerting setup

AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudWatch monitoring and alerting for Enterprise AI System'

Parameters:
  Environment:
    Type: String
    Default: production
    AllowedValues: [development, staging, production]
    Description: Environment name
  
  AlertEmail:
    Type: String
    Default: admin@enterprise-ai.com
    Description: Email address for alerts
  
  ECSClusterName:
    Type: String
    Description: ECS cluster name
  
  ECSServiceName:
    Type: String
    Description: ECS service name
  
  LoadBalancerFullName:
    Type: String
    Description: Load balancer full name
  
  DBInstanceIdentifier:
    Type: String
    Description: RDS instance identifier

Resources:
  # SNS Topic for Alerts
  AlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${Environment}-enterprise-ai-alerts'
      DisplayName: !Sub 'Enterprise AI System Alerts (${Environment})'
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-alerts'
        - Key: Environment
          Value: !Ref Environment

  # SNS Subscription for Email Alerts
  AlertEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref AlertTopic
      Endpoint: !Ref AlertEmail

  # CloudWatch Log Groups
  ApplicationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/${Environment}-enterprise-ai'
      RetentionInDays: !If [IsProduction, 30, 7]
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-logs'
        - Key: Environment
          Value: !Ref Environment

  NginxLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/ecs/${Environment}-enterprise-ai-nginx'
      RetentionInDays: !If [IsProduction, 14, 7]
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-nginx-logs'
        - Key: Environment
          Value: !Ref Environment

  # Custom Metrics Namespace
  CustomMetricsNamespace:
    Type: AWS::CloudWatch::CompositeAlarm
    Properties:
      AlarmName: !Sub '${Environment}-enterprise-ai-namespace-placeholder'
      AlarmDescription: Placeholder for custom metrics namespace
      AlarmRule: !Sub 'FALSE'
      ActionsEnabled: false

  # Application Performance Alarms
  HighCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-enterprise-ai-high-cpu'
      AlarmDescription: High CPU utilization on ECS service
      MetricName: CPUUtilization
      Namespace: AWS/ECS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ServiceName
          Value: !Ref ECSServiceName
        - Name: ClusterName
          Value: !Ref ECSClusterName
      AlarmActions:
        - !Ref AlertTopic
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-high-cpu'
        - Key: Environment
          Value: !Ref Environment

  HighMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-enterprise-ai-high-memory'
      AlarmDescription: High memory utilization on ECS service
      MetricName: MemoryUtilization
      Namespace: AWS/ECS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 85
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ServiceName
          Value: !Ref ECSServiceName
        - Name: ClusterName
          Value: !Ref ECSClusterName
      AlarmActions:
        - !Ref AlertTopic
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-high-memory'
        - Key: Environment
          Value: !Ref Environment

  # Application Load Balancer Alarms
  HighResponseTimeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-enterprise-ai-high-response-time'
      AlarmDescription: High response time on load balancer
      MetricName: TargetResponseTime
      Namespace: AWS/ApplicationELB
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 2
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref LoadBalancerFullName
      AlarmActions:
        - !Ref AlertTopic
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-high-response-time'
        - Key: Environment
          Value: !Ref Environment

  HighErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-enterprise-ai-high-error-rate'
      AlarmDescription: High 5xx error rate on load balancer
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref LoadBalancerFullName
      AlarmActions:
        - !Ref AlertTopic
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-high-error-rate'
        - Key: Environment
          Value: !Ref Environment

  # Database Alarms
  HighDBCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-enterprise-ai-db-high-cpu'
      AlarmDescription: High CPU utilization on RDS instance
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 75
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceIdentifier
      AlarmActions:
        - !Ref AlertTopic
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-db-high-cpu'
        - Key: Environment
          Value: !Ref Environment

  HighDBConnectionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-enterprise-ai-db-high-connections'
      AlarmDescription: High database connections on RDS instance
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceIdentifier
      AlarmActions:
        - !Ref AlertTopic
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-db-high-connections'
        - Key: Environment
          Value: !Ref Environment

  LowDBFreeStorageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-enterprise-ai-db-low-storage'
      AlarmDescription: Low free storage on RDS instance
      MetricName: FreeStorageSpace
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 2000000000  # 2GB in bytes
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceIdentifier
      AlarmActions:
        - !Ref AlertTopic
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-db-low-storage'
        - Key: Environment
          Value: !Ref Environment

  # Custom Application Metrics
  AuthenticationFailuresAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${Environment}-enterprise-ai-auth-failures'
      AlarmDescription: High authentication failure rate
      MetricName: AuthenticationFailures
      Namespace: Enterprise-AI
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 50
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlertTopic
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-enterprise-ai-auth-failures'
        - Key: Environment
          Value: !Ref Environment

  # CloudWatch Dashboard
  ApplicationDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${Environment}-enterprise-ai-dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ECS", "CPUUtilization", "ServiceName", "${ECSServiceName}", "ClusterName", "${ECSClusterName}" ],
                  [ ".", "MemoryUtilization", ".", ".", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "ECS Service Metrics",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApplicationELB", "RequestCount", "LoadBalancer", "${LoadBalancerFullName}" ],
                  [ ".", "TargetResponseTime", ".", "." ],
                  [ ".", "HTTPCode_Target_2XX_Count", ".", "." ],
                  [ ".", "HTTPCode_Target_4XX_Count", ".", "." ],
                  [ ".", "HTTPCode_Target_5XX_Count", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Load Balancer Metrics",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/RDS", "CPUUtilization", "DBInstanceIdentifier", "${DBInstanceIdentifier}" ],
                  [ ".", "DatabaseConnections", ".", "." ],
                  [ ".", "FreeStorageSpace", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "RDS Metrics",
                "period": 300
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '/ecs/${Environment}-enterprise-ai'\n| fields @timestamp, @message\n| filter @message like /ERROR/\n| sort @timestamp desc\n| limit 20",
                "region": "${AWS::Region}",
                "title": "Recent Errors",
                "view": "table"
              }
            }
          ]
        }

  # Log Metric Filters
  ErrorLogMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ApplicationLogGroup
      FilterPattern: '[timestamp, request_id, level="ERROR", ...]'
      MetricTransformations:
        - MetricNamespace: Enterprise-AI
          MetricName: ErrorCount
          MetricValue: '1'
          DefaultValue: 0

  AuthFailureLogMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ApplicationLogGroup
      FilterPattern: '[timestamp, request_id, level, logger, service, version, environment, event="Authentication failed", ...]'
      MetricTransformations:
        - MetricNamespace: Enterprise-AI
          MetricName: AuthenticationFailures
          MetricValue: '1'
          DefaultValue: 0

Conditions:
  IsProduction: !Equals [!Ref Environment, production]

Outputs:
  AlertTopicArn:
    Description: SNS topic ARN for alerts
    Value: !Ref AlertTopic
    Export:
      Name: !Sub '${Environment}-enterprise-ai-alert-topic-arn'
  
  ApplicationLogGroupName:
    Description: Application log group name
    Value: !Ref ApplicationLogGroup
    Export:
      Name: !Sub '${Environment}-enterprise-ai-log-group-name'
  
  DashboardURL:
    Description: CloudWatch dashboard URL
    Value: !Sub 'https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${Environment}-enterprise-ai-dashboard'
    Export:
      Name: !Sub '${Environment}-enterprise-ai-dashboard-url'

